version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2 

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.6-node
        environment:
          RAILS_ENV: test
      - image: circleci/mysql:8.0.20
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ROOT_HOST: '%'
      - image: circleci/postgres:9.6.15-alpine
        environment:
          POSTGRES_USER: root
    executor: ruby/default
    steps:
      - checkout
      - restore_cache:
          key: gem-cache-{{ checksum "active_storage_db.gemspec" }}
      - run:
          name: Setup Bundler
          command: gem install bundler
      - run:
          name: Bundle Install
          command: bundle install --path vendor/bundle
      - save_cache:
          key: gem-cache-{{ checksum "active_storage_db.gemspec" }}
          paths: vendor/bundle
      - run:
          name: Run PostgreSQL Specs
          command: |
            DB=postgresql bin/rails db:reset
            DB=postgresql bin/rspec \
              --profile 10 \
              --format RspecJunitFormatter \
              --out test_results/rspec_postgresql.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb")
      - run:
          name: Run MySQL Specs
          command: |
            DB=mysql bin/rails db:reset
            DB=mysql bin/rspec \
              --profile 10 \
              --format RspecJunitFormatter \
              --out test_results/rspec_mysql.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb")
      - store_test_results:
          path: test_results

triggers:
  - schedule:
      cron: "0 8 * * 0"
      filters:
        branches:
          only:
            - master
